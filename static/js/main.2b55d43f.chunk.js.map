{"version":3,"sources":["components/NavBar.tsx","components/PageContent.tsx","components/Home.tsx","api.ts","components/Loader/Loader.tsx","types/Person.ts","components/PersonLink.tsx","components/PersonItem.tsx","components/PeopleList.tsx","components/NotFound.tsx","App.tsx","index.tsx"],"names":["NavBar","getLinkClass","isActive","classNames","className","role","to","PageContent","Home","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonSex","PersonLink","person","slug","sex","name","Female","PersonItem","selectedSlug","born","died","fatherName","motherName","father","mother","PeopleList","useState","people","setPeople","isLoading","setIsLoading","isError","setIsError","useParams","personId","useEffect","data","map","find","getPreparedPeople","catch","finally","isPeopleOnServer","length","isNoPeopleOnServer","NotFound","App","path","element","index","createRoot","document","getElementById","render"],"mappings":"sQAGaA,EAAS,WACpB,IAAMC,EAAe,SAAC,GAAD,IACjBC,EADiB,EACjBA,SADiB,OAEhBC,IAAW,cAAe,CAC7B,8BAA+BD,GAHZ,EAMrB,OACE,qBACE,UAAQ,MACRE,UAAU,iCACVC,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKD,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CACEA,UAAWH,EACXK,GAAG,IAFL,kBAOA,cAAC,IAAD,CACEF,UAAWH,EACXK,GAAG,UAFL,0BAUT,ECjCYC,EAAc,WACzB,OACE,qCACE,cAAC,EAAD,IAEA,sBAAMH,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UAKT,ECfYI,EAAO,kBAClB,oBAAIJ,UAAU,QAAd,sBADkB,E,sBCSb,SAASK,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKd,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECUVe,EAAZ,SAAYA,GAAZ,OAAYA,EAAZ,WAAYA,EAAZ,SAAYA,CAAZ,MCHaC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpCC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,IAAKC,EAASH,EAATG,KAEnB,OACE,cAAC,IAAD,CACElB,GAAIgB,EACJlB,UACED,IAAW,CACT,kBAAmBoB,IAAQJ,EAAUM,SAJ3C,SAQGD,GAGN,ECfYE,EAA8B,SAAC,GAA8B,IAA5BL,EAA2B,EAA3BA,OAAQM,EAAmB,EAAnBA,aAElDC,EAQEP,EARFO,KACAC,EAOER,EAPFQ,KACAC,EAMET,EANFS,WACAC,EAKEV,EALFU,WACAR,EAIEF,EAJFE,IACAS,EAGEX,EAHFW,OACAC,EAEEZ,EAFFY,OACAX,EACED,EADFC,KAGF,OACE,qBACElB,UACED,IAAW,CAAE,yBAA0BwB,IAAiBL,IAE1D,UAAQ,SAJV,UAME,6BACE,cAAC,EAAD,CAAYD,OAAQA,MAGtB,6BAAKE,IACL,6BAAKK,IACL,6BAAKC,IACL,6BACGI,EACC,cAAC,EAAD,CAAYZ,OAAQY,IAEpBF,GAAc,MAGlB,6BACGC,EACC,cAAC,EAAD,CAAYX,OAAQW,IAEpBF,GAAc,QAKvB,EClCM,IAAMI,EAAa,WACxB,MAA4BC,mBAAmB,IAA/C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA0BC,cAAlBC,gBAAR,MAAmB,GAAnB,EAEAC,qBAAU,WACRL,GAAa,GAEb9B,IACGK,MAAK,SAAA+B,GACJR,EArBR,SAA2BD,GACzB,OAAOA,EAAOU,KAAI,SAAAzB,GAChB,OAAO,2BACFA,GADL,IAEEY,OAAQG,EAAOW,MAAK,SAAAd,GAAM,OAAIA,EAAOT,OAASH,EAAOU,UAA3B,IAC1BC,OAAQI,EAAOW,MAAK,SAAAf,GAAM,OAAIA,EAAOR,OAASH,EAAOS,UAA3B,KAE7B,GACF,CAaiBkB,CAAkBH,GAC7B,IACAI,OAAM,WACLR,GAAW,EACZ,IACAS,SAAQ,WACPX,GAAa,EACd,GACJ,GAAE,IAEH,IAAMY,IAAqBf,EAAOgB,SAAWZ,EACvCa,GAAsBjB,EAAOgB,SAAWd,EAE9C,OACE,qCACE,oBAAIlC,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGkC,GACC,cAAC,EAAD,IAGDE,GACC,mBAAG,UAAQ,qBAAqBpC,UAAU,kBAA1C,kCAKDiD,GACC,mBAAG,UAAQ,kBAAX,+CAKDF,GACC,wBACE,UAAQ,cACR/C,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACGgC,EAAOU,KAAI,SAAAzB,GAAM,OAChB,cAAC,EAAD,CAEEA,OAAQA,EACRM,aAAcgB,GAFTtB,EAAOC,KAFE,gBAcjC,EC9FYgC,EAAW,WACtB,OACE,oBAAIlD,UAAU,QAAd,2BAEH,ECGYmD,EAAM,kBACjB,qBAAK,UAAQ,MAAb,SACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,CAAUnD,GAAG,QAC1C,cAAC,IAAD,CAAOkD,KAAK,SAASC,QAAS,cAAC,EAAD,IAA9B,SACE,cAAC,IAAD,CAAOD,KAAK,gBAEd,cAAC,IAAD,CAAOA,KAAK,IAAIC,QAAS,cAAC,EAAD,YATd,ECCnBE,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.2b55d43f.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavBar = () => {\n  const getLinkClass = (\n    { isActive }: { isActive: boolean },\n  ) => classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={getLinkClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={getLinkClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { NavBar } from './NavBar';\n\nexport const PageContent = () => {\n  return (\n    <>\n      <NavBar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </>\n  );\n};\n","export const Home = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","export interface Person {\n  name: string,\n  sex: string,\n  born: number,\n  died: number,\n  fatherName: string | null,\n  motherName: string | null,\n  slug: string,\n  mother?: Person,\n  father?: Person,\n}\n\nexport enum PersonSex {\n  Female = 'f',\n  Male = 'm',\n}\n","import { Link } from 'react-router-dom';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Person, PersonSex } from '../types';\n\ntype Props = {\n  person: Person\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={slug}\n      className={\n        classNames({\n          'has-text-danger': sex === PersonSex.Female,\n        })\n      }\n    >\n      {name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person;\n  selectedSlug: string;\n};\n\nexport const PersonItem: React.FC<Props> = ({ person, selectedSlug }) => {\n  const {\n    born,\n    died,\n    fatherName,\n    motherName,\n    sex,\n    father,\n    mother,\n    slug,\n  } = person;\n\n  return (\n    <tr\n      className={\n        classNames({ 'has-background-warning': selectedSlug === slug })\n      }\n      data-cy=\"person\"\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <PersonLink person={mother} />\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n      <td>\n        {father ? (\n          <PersonLink person={father} />\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\nimport { Loader } from './Loader';\nimport { PersonItem } from './PersonItem';\n\nfunction getPreparedPeople(people: Person[]) {\n  return people.map(person => {\n    return {\n      ...person,\n      mother: people.find(mother => mother.name === person.motherName),\n      father: people.find(father => father.name === person.fatherName),\n    };\n  });\n}\n\nexport const PeopleList = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const { personId = '' } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(data => {\n        setPeople(getPreparedPeople(data));\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  const isPeopleOnServer = !!people.length && !isError;\n  const isNoPeopleOnServer = !people.length && !isLoading;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeopleOnServer && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isPeopleOnServer && (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <PersonItem\n                    key={person.slug}\n                    person={person}\n                    selectedSlug={personId}\n                  />\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { PageContent } from './components/PageContent';\nimport { Home } from './components/Home';\nimport { PeopleList } from './components/PeopleList';\nimport { NotFound } from './components/NotFound';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Routes>\n      <Route path=\"/\" element={<PageContent />}>\n        <Route index element={<Home />} />\n        <Route path=\"/home\" element={<Navigate to=\"/\" />} />\n        <Route path=\"people\" element={<PeopleList />}>\n          <Route path=\":personId\" />\n        </Route>\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </Routes>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}